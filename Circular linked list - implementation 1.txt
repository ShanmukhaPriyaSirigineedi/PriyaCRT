Circular linked list - implementation 1

Write a Program to implement circular linked list. If a user enters a negative value, the last node must be pointing to first node.

Input Format

Read elements upto -1

Constraints

1<=n<=10^7

Output Format

print output

Sample Input 0

1
2
3
4
-1
Sample Output 0

1
2
3
4
Sample Input 1

1
2
3
4
5
6
-1
Sample Output 1

1
2
3
4
5
6

Code :

class Node:
    def __init__(self, data):
        self.data=data
        self.next=None
class CircularLinkedList:
    def __init__(self):
        self.head=None
    def create(self,data):
        newNode=Node(data)
        if self.head==None:
            self.head=newNode
            newNode.next = self.head
        else:
            temp=self.head
            while temp.next!= self.head:
                temp=temp.next
            temp.next = newNode
            newNode.next = self.head
    def show(self):
        if self.head==None:
            print("List is Empty")
            return
        temp=self.head
        print(temp.data)
        while temp.next!=self.head:
            temp=temp.next
            print(temp.data)
l1=CircularLinkedList()
while True:
    a=int(input())
    if a==-1:
        break
    else:
        l1.create(a)
l1.show()
    
Output :

Case 1:

Input (stdin)

1
2
3
4
-1
Your Output (stdout)

1
2
3
4
Expected Output

1
2
3
4

Case 2:

Input (stdin)

1
2
3
4
5
6
-1
Your Output (stdout)

1
2
3
4
5
6
Expected Output

1
2
3
4
5
6
