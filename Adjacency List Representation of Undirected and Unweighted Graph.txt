Adjacency List Representation of Undirected and Unweighted Graph

Code :

def addNode(v):
    if v in graph:
        print(v,"is already existed")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addEdge(node1,node2):
    if node1 not in graph:
        print(node1,"not available in graph")
    elif node2 not in graph:
        print(node2,"not available in graph")
    else:
        graph[node1].append(node2)
        graph[node2].append(node1)
graph={}
while True:
    print()
    print("1.Add Node\n 2.Add Edge\n 3.Print Graph\n 4.Exit")
    ch=int(input("Enter your choice:"))
    if ch==1:
        v=input("Enter node:")
        addNode(v)
    elif ch==2:
        node1=input("Enter node1")
        node2=input("Enter node2")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("Invalid Choice")

Output :

1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:1
Enter node:a
1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:1
Enter node:b
1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:1
Enter node:c
1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:1
Enter node:d
1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:2
Enter node1a
Enter node2b
1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:2
Enter node1b
Enter node2c
1.Add Node
 2.Add Edge
 3.Print Graph
 4.ExitEnter your choice:2
 Enter node1c
 Enter node2d
 1.Add Node
 2.Add Edge
 3.Print Graph
 4.ExitEnter your choice:2
 Enter node1d
 Enter node2a
 1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:3
a : ['b', 'd']
b : ['a', 'c']
c : ['b', 'd']
d : ['c', 'a']

1.Add Node
 2.Add Edge
 3.Print Graph
 4.Exit
Enter your choice:4
> 
            